plugins {
    id 'scala'
    id 'maven-publish'
    id 'fabric-loom' version '1.2-SNAPSHOT'
    id "com.github.breadmoirai.github-release" version "2.4.1"
    id "com.matthewprenger.cursegradle" version "1.4.0"
    id "com.modrinth.minotaur" version "2.+"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven {
        name = "Azure"
        url = uri("https://pkgs.dev.azure.com/Kotori316/minecraft/_packaging/mods/maven/v1")
        content {
            it.includeVersion("org.typelevel", "cats-core_2.13", project.catsVersion)
            it.includeVersion("org.typelevel", "cats-kernel_2.13", project.catsVersion)
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    include(api(group: 'org.scala-lang', name: 'scala3-library_3', version: project.scala3Version))
    include(api(group: 'org.scala-lang', name: 'scala-library', version: project.scala2Version))
    include(api(group: "org.typelevel", name: "cats-core_2.13", version: project.catsVersion))
    include(api(group: "org.typelevel", name: "cats-kernel_2.13", version: project.catsVersion))
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

tasks.named("wrapper", Wrapper) {
    it.gradleVersion = "8.1.1"
}

tasks.withType(GenerateModuleMetadata).configureEach {
    enabled = false
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifactId = project.archives_base_name
            pom {
                name = project.archives_base_name
                description = "SLP for Minecraft ${project.minecraft_version}, Fabric ${project.fabric_version}"
                url = "https://github.com/Kotori316/SLP-fabric"
                packaging = "jar"
                withXml {
                    List<String> notRequiredArtifacts = ["fabric-loader", "fabric-api"]
                    def pomNode = asNode() as Node
                    pomNode.dependencies.'*'.findAll() { Node node ->
                        def valueList = node.value() as NodeList
                        String artifactId = ((valueList.get(1) as Node).value() as NodeList).get(0)
                        if (notRequiredArtifacts.stream().anyMatch { artifactId.contains(it) })
                            node.parent().remove(node)
                    }
                }
            }
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
    }
}

curseforge {
    apiKey = project.hasProperty("curseforge_additional-enchanted-miner_key") ? getProperty("curseforge_additional-enchanted-miner_key") : ""
    project {
        id = '320926'
        changelogType = 'markdown'
        changelog = 'A changelog can be found at https://github.com/Kotori316/SLP-fabric/commits/scala3'
        releaseType = 'release'
        addGameVersion("1.19.3")
        addGameVersion("1.19.4")
        mainArtifact(tasks.remapJar)
        addArtifact jar
        addArtifact srcJar
        addArtifact shadowJar
    }
    options {
        curseGradleOptions.debug = false // defaults to false
        javaVersionAutoDetect = false
        forgeGradleIntegration = false
    }
}