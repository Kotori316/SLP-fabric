# Automatically build the project and run any configured tests for every push
# and submitted pull request. This can help catch issues that only occur on
# certain platforms or Java versions, and provides a first line of defence
# against bad commits.

name: build
on:
  push:
    branches:
      - scala3
  pull_request: {}

jobs:
  build:
    strategy:
      matrix:
        # Use these Java versions
        java: [
          21,    # Current Java LTS & minimum supported by Minecraft
        ]
        # and run on both Linux and Windows
        os: [ubuntu-latest, windows-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: validate gradle wrapper
        uses: gradle/actions/wrapper-validation@v4
      - name: setup jdk ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'microsoft'
      - name: make gradle wrapper executable
        if: ${{ runner.os != 'Windows' }}
        run: chmod +x ./gradlew
      - uses: gradle/actions/setup-gradle@v4
        with:
          add-job-summary: 'on-failure'
      - name: Build
        run: ./gradlew build publishToMavenLocal
      - name: capture build artifacts
        if: ${{ runner.os == 'Linux' && matrix.java == '21' && github.event_name == 'push' }} # Only upload artifacts built from latest java on one OS
        uses: actions/upload-artifact@v4
        with:
          name: SLP-fabric-${{ github.run_number }}
          path: |
            build/libs/
            build/devlibs/
      - name: Example Test Executable
        if: ${{ runner.os != 'Windows' }}
        working-directory: ./examples
        run: chmod +x ./gradlew
      - name: Example Test
        run: ./gradlew runGameTest
        working-directory: ./examples
